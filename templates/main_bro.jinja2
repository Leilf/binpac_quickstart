##! Implements base functionality for {{ name }} analysis. Generates the {{ name|lower }}.log file.

# Generated by binpac_quickstart

module {{ name }};

export {
	redef enum Log::ID += { LOG };

	type Info: record {
		## Timestamp for when the event happened.
		ts:     time    &log;
		## Unique ID for the connection.
		uid:    string  &log;
		## The connection's 4-tuple of endpoint addresses/ports.
		id:     conn_id &log;
	};

	## Event that can be handled to access the {{ name }} record as it is sent on
	## to the loggin framework.
	global log_{{ name|lower }}: event(rec: Info);
}

# TODO: What ports does {{ name }} use?
const ports = { 12345/tcp, 23456/udp };

event bro_init() &priority=5
	{
	Log::create_stream({{ name|upper }}::LOG, [$columns=Info, $ev=log_{{ name|lower }}]);
	Analyzer::register_for_ports(Analyzer::ANALYZER_{{ name|upper }}, ports);
	}

event {{ name|lower }}_event(c: connection)
	{
	local info: Info;
	info$ts  = network_time();
	info$uid = c$uid;
	info$id  = c$id;

	Log::write({{ name|upper }}::LOG, info);
	}